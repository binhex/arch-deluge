name: workflow-docker-manual

on:
  workflow_dispatch:
    inputs:
      tags:
        description: 'Enter tag name for test/dev image'
        default: 'test'

jobs:
  gcr-dockerhub-build-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU for multi-arch support
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: Login to Quay
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}
      - name: Login to GitLab
        uses: docker/login-action@v3
        with:
          registry: registry.gitlab.com
          username: ${{ secrets.GITLAB_USERNAME }}
          password: ${{ secrets.GITLAB_TOKEN }}
      - name: Sync GitHub README.md with Docker Hub
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }} # NOTE: This MUST be the password NOT the token
          repository: ${{ github.repository }}
          short-description: ${{ github.event.repository.description }}
      - name: DEBUG Show Runners environment
        shell: bash
        run: |
            export
      - name: Generate temporary tag name
        shell: bash
        run: |
          test_tag=$(date +%Y%m%d%H%M%S)
          echo "[debug] Generated test tag name is '${test_tag}'"
          echo "test_tag=$test_tag" >> $GITHUB_OUTPUT
        id: generate_temporary_tag_name
      - name: Generate app name
        shell: bash
        run: |
          app_name=$(echo "${GITHUB_REPOSITORY}" | grep -P -o -m 1 '(?<=/arch-).*')
          echo "[debug] Generated app name is '${app_name}'"
          echo "app_name=$app_name" >> $GITHUB_OUTPUT
        id: generate_app_name
      - name: Build amd64 image and export to Docker for testing
        uses: Wandalen/wretry.action@v3
        with:
          action: docker/build-push-action@v6
          with: |
            context: .
            load: true
            tags: ghcr.io/${{ github.repository }}:${{ steps.generate_temporary_tag_name.outputs.test_tag }}
            build-args: |
              RELEASETAG=${{ github.event.inputs.tags }}
          attempt_limit: 3
          attempt_delay: 600000
      - name: Run tests using previously built image
        shell: bash
        run: |
          git_clone_scripts_dest="/tmp/scripts"
          git_clone_scripts_repo="https://github.com/binhex/scripts.git"
          git clone "${git_clone_scripts_repo}" "${git_clone_scripts_dest}"
          "${git_clone_scripts_dest}/shell/arch/docker/testrunner.sh" --app-name ${{ steps.generate_app_name.outputs.app_name }} --image-name "ghcr.io/${{ github.repository }}:${{ steps.generate_temporary_tag_name.outputs.test_tag }}"
      - name: Generate tag names
        shell: bash
        run: |
          # get tag name
          release_version="${{ github.event.inputs.tags }}"

          # validate and construct sub-version
          if [[ "${release_version}" =~ ^(v?[0-9]+)\.([0-9]+)\.[0-9]+ ]]; then
            sub_version="${BASH_REMATCH[1]}.${BASH_REMATCH[2]}.x"
            echo "[debug] Constructed sub-version: $sub_version"
            echo "tag_names=\
              ${{ github.repository }}:${{ github.event.inputs.tags }}, \
              ${{ github.repository }}:${{ sub_version }}, \
              quay.io/${{ github.repository }}:${{ github.event.inputs.tags }}, \
              quay.io/${{ github.repository }}:${{ sub_version }}, \
              ghcr.io/${{ github.repository }}:${{ github.event.inputs.tags }}, \
              ghcr.io/${{ github.repository }}:${{ sub_version }}, \
              registry.gitlab.com/${{ github.repository }}:${{ github.event.inputs.tags }}, \
              registry.gitlab.com/${{ github.repository }}:${{ sub_version }}\
              " >> $GITHUB_OUTPUT
          else
            echo "[warn] Release tag '${release_version}' does not include 3 or more octets, sub-version tag not created."
            echo "tag_names=\
              ${{ github.repository }}:${{ github.event.inputs.tags }}, \
              quay.io/${{ github.repository }}:${{ github.event.inputs.tags }}, \
              ghcr.io/${{ github.repository }}:${{ github.event.inputs.tags }}, \
              registry.gitlab.com/${{ github.repository }}:${{ github.event.inputs.tags }}\
              " >> $GITHUB_OUTPUT
          fi
          echo "[debug] Generated tag names are '${tag_names}'"
        id: generate_tag_names
      # note this will re-use the internal cached amd64 image from the previous build
      - name: Build multi-arch Docker image, tag and push to registries
        uses: Wandalen/wretry.action@v3
        with:
          action: docker/build-push-action@v6
          with: |
            context: .
            platforms: linux/amd64,linux/arm64
            push: true
            tags: ${{ github.event.inputs.generate_tag_names }}
            build-args: |
              RELEASETAG=${{ github.event.inputs.tags }}
          attempt_limit: 3
          attempt_delay: 600000